// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ------------ //
// DmxInput_cs1 //
// ------------ //

#define DmxInput_cs1_wrap_target 0
#define DmxInput_cs1_wrap 4

static const uint16_t DmxInput_cs1_program_instructions[] = {
            //     .wrap_target
    0x202a, //  0: wait   0 pin, 10                  
    0x20aa, //  1: wait   1 pin, 10                  
    0x400a, //  2: in     pins, 10                   
    0x4076, //  3: in     null, 22                   
    0x8020, //  4: push   block                      
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program DmxInput_cs1_program = {
    .instructions = DmxInput_cs1_program_instructions,
    .length = 5,
    .origin = -1,
};

static inline pio_sm_config DmxInput_cs1_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + DmxInput_cs1_wrap_target, offset + DmxInput_cs1_wrap);
    return c;
}
#endif

// ------------ //
// DmxInput_cs2 //
// ------------ //

#define DmxInput_cs2_wrap_target 0
#define DmxInput_cs2_wrap 4

static const uint16_t DmxInput_cs2_program_instructions[] = {
            //     .wrap_target
    0x202b, //  0: wait   0 pin, 11                  
    0x20ab, //  1: wait   1 pin, 11                  
    0x400a, //  2: in     pins, 10                   
    0x4076, //  3: in     null, 22                   
    0x8020, //  4: push   block                      
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program DmxInput_cs2_program = {
    .instructions = DmxInput_cs2_program_instructions,
    .length = 5,
    .origin = -1,
};

static inline pio_sm_config DmxInput_cs2_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + DmxInput_cs2_wrap_target, offset + DmxInput_cs2_wrap);
    return c;
}
#endif

